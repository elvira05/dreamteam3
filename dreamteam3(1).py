1. Напишите программу, которая принимает имя файла и выводит его расширение. Если расширение у файла определить невозможно, выбросите исключение.



2. Напишите функцию, которая принимает год и определяет, является ли год с данным номером високосным. Если год является високосным, то возвращает «YES», иначе возвращает «NO».Год является високосным, если его номер кратен 4, но не кратен 100, или если он кратен 400.



3. Напишите функцию, которая принимает возраст собаки и нужно вычислить, возраст собаки в человеческих годах.(В течение первых двух лет собачий год равен 10.5 человеческим годам. После этого каждый год собаки равен 4 человеческим годам).



4. Напишите алгоритм, определяющий, является ли число n счастливым.

Счастливое число — это число, определяемое следующим процессом:

Начиная с любого положительного целого числа, замените число суммой квадратов его цифр.
Повторяйте процесс до тех пор, пока число не станет равным 1 (где оно и останется), или пока он не будет бесконечно повторяться в цикле , который не включает 1.
Те числа, для которых этот процесс заканчивается на 1 , счастливы.
Возврат true , если n это счастливое число, а false если нет .

Пример 1:

Ввод: n = 19
Вывод: правда

Объяснение: 
1**2 + 9**2 = 82
8**2 + 2**2 = 68
6**2 + 8**2 = 100
1**2 + 0**2 + 0**2 = 1

Пример 2:

Вход: n = 2
Выход: ложь



5. Строка считается заглавной, если каждое слово в строке либо (а) пишется с заглавной буквы (то есть только первая буква слова в верхнем регистре), либо (б) считается исключением и полностью помещается в строчными буквами, если только это не первое слово, которое всегда пишется с большой буквы.

Напишите функцию, которая преобразует строку в заглавный регистр, учитывая необязательный список исключений (второстепенные слова). Список второстепенных слов будет представлен в виде строки, где каждое слово отделено пробелом. Ваша функция должна игнорировать регистр строки второстепенных слов — она должна вести себя так же, даже если регистр строки второстепенных слов изменен.

Первый аргумент (обязательный): исходная строка для преобразования.
Второй аргумент (необязательный): список второстепенных слов, разделенных пробелами, которые всегда должны быть строчными, за исключением первого слова в строке

примеры:
title_case('a clash of KINGS', 'a an the of') # 
должен вернуть: 'A Clash of Kings'

title_case('THE WIND IN THE WILLOWS', 'The In') # 
должен вернуть: 'The Wind in the Willows'

title_case('the quick brown fox') # 
должен вернуть: 'The Quick Brown Fox'



6. Напишите функцию to_weird_case, которая принимает строку и возвращает ту же строку, в которой все символы с четным индексом в каждом слове отображаются в верхнем регистре, а все символы с нечетным индексом в каждом слове — в нижнем регистре. Только что объясненная индексация основана на нуле, поэтому нулевой индекс четный, поэтому этот символ должен быть в верхнем регистре, и вам нужно начинать заново для каждого слова.

Передаваемая строка будет состоять только из букв алфавита и пробелов (' '). Пробелы будут присутствовать только в том случае, если слов несколько. Слова будут разделены одним пробелом (' ').

ПрИмЕрЫ:
to_weird_case('String'); # => returns 'StRiNg'
to_weird_case('Weird string case') # => returns 'WeIrD StRiNg CaSe'
to_weird_case('This') # => returns 'ThIs'
to_weird_case('is') # => returns 'Is'
to_weird_case('This is a test') # => returns 'ThIs Is A TeSt'





7. ваша задача — создать функцию, которая превращает строку в мексиканскую волну. Вам будет передана строка, и вы должны вернуть эту строку в виде массива, где заглавная буква означает стоящего человека (https://ru.wikipedia.org/wiki/Волна_(стадион).

Правила:
1. Строка ввода всегда будет строчной, но может быть и пустой.
2. Если символ в строке является пробелом, пропустите его, как если бы это было пустое место.

Пример:
wave("hello") => ["Hello", "hEllo", "heLlo", "helLo", "hellO"]

https://ru.wikipedia.org/wiki/Волна_(стадион)
